basePath: /api
definitions:
  entities.CourseForumAccessMode:
    enum:
    - student-only
    - teacher-only
    - student-teacher
    type: string
    x-enum-varnames:
    - CourseForumAccessMode_Student
    - CourseForumAccessMode_Teacher
    - CourseForumAccessMode_StudentTeacher
  entities.CourseForumStatus:
    enum:
    - open
    - close
    - close-temporary
    type: string
    x-enum-varnames:
    - CourseForumStatus_Open
    - CourseForumStatus_Close
    - CourseForumStatus_CloseTemporary
  entities.CourseStatus:
    enum:
    - in-progress
    - verified
    - starting
    - done
    - pause
    - cancel
    type: string
    x-enum-varnames:
    - CourseStatus_InProgress
    - CourseStatus_Verified
    - CourseStatus_Starting
    - CourseStatus_Done
    - CourseStatus_Pause
    - CourseStatus_Cancel
  entities.OrderStatus:
    enum:
    - pending
    - success
    - failed
    type: string
    x-enum-varnames:
    - OrderStatus_Pending
    - OrderStatus_Success
    - OrderStatus_Failed
  entities.PaymentStatus:
    enum:
    - pending
    - success
    - failed
    type: string
    x-enum-varnames:
    - PaymentStatus_Pending
    - PaymentStatus_Success
    - PaymentStatus_Failure
  entities.TransactionTag:
    enum:
    - sell
    - charge_wallet
    - deposit_wallet
    - salary_payment
    type: string
    x-enum-varnames:
    - TransactionTag_Sell
    - TransactionTag_ChargeWallet
    - TransactionTag_DepositWallet
    - TransactionTag_SalaryPayment
  entities.TransactionType:
    enum:
    - withdraw
    - deposit
    type: string
    x-enum-varnames:
    - TransactionType_Withdraw
    - TransactionType_Deposit
  entities.VideoAccessLevel:
    enum:
    - private
    - public
    type: string
    x-enum-varnames:
    - VideoAccessLevel_Private
    - VideoAccessLevel_Public
  entities.VideoStatus:
    enum:
    - pending
    - fail
    - done
    type: string
    x-enum-varnames:
    - VideoStatus_Pending
    - VideoStatus_Fail
    - VideoStatus_Done
  github_com_ladmakhi81_learnup_internals_auth_dto_req.LoginReqDto:
    properties:
      password:
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  github_com_ladmakhi81_learnup_internals_auth_dto_res.LoginResDto:
    properties:
      accessToken:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_cart_dto_req.CreateCartReqDto:
    properties:
      courseId:
        minimum: 1
        type: integer
    required:
    - courseId
    type: object
  github_com_ladmakhi81_learnup_internals_cart_dto_res.AddCartResDto:
    properties:
      courseId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      userId:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_cart_dto_res.GetCartItemDto:
    properties:
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_cart_dto_res.courseCartItem'
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_cart_dto_res.courseCartItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_category_dto_req.CreateCategoryReq:
    properties:
      name:
        minLength: 3
        type: string
      parentId:
        type: integer
    required:
    - name
    type: object
  github_com_ladmakhi81_learnup_internals_category_dto_res.CreateCategoryResDto:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_category_dto_res.GetCategoriesTreeItemDto:
    properties:
      id:
        type: integer
      name:
        type: string
      parentCategoryId:
        type: integer
      subCategories:
        items:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_category_dto_res.GetCategoriesTreeItemDto'
        type: array
    type: object
  github_com_ladmakhi81_learnup_internals_comment_dto_req.CreateCommentReqDto:
    properties:
      content:
        minLength: 3
        type: string
      parentId:
        type: integer
    required:
    - content
    type: object
  github_com_ladmakhi81_learnup_internals_comment_dto_res.GetCommentPageItemDto:
    properties:
      content:
        type: string
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_comment_dto_res.getCourseItem'
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      isReport:
        type: boolean
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_comment_dto_res.getUserItem'
    type: object
  github_com_ladmakhi81_learnup_internals_comment_dto_res.getCourseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_comment_dto_res.getUserItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_req.CreateCourseReqDto:
    properties:
      abilityToAddComment:
        type: boolean
      canHaveDiscount:
        type: boolean
      categoryId:
        type: integer
      commentAccessMode:
        enum:
        - all
        - students
        type: string
      courseLevel:
        enum:
        - beginner
        - pre-intermediate
        - intermediate
        - advance
        type: string
      description:
        minLength: 20
        type: string
      discountFeeAmountPercentage:
        maximum: 100
        minimum: 0
        type: number
      fee:
        minimum: 0
        type: number
      forumAccessMode:
        allOf:
        - $ref: '#/definitions/entities.CourseForumAccessMode'
        enum:
        - student-only
        - teacher-only
        - student-teacher
      forumStatus:
        allOf:
        - $ref: '#/definitions/entities.CourseForumStatus'
        enum:
        - open
        - close
      image:
        minLength: 10
        type: string
      introductionVideo:
        minLength: 20
        type: string
      isForumPublic:
        type: boolean
      maxDiscountAmount:
        minimum: 0
        type: number
      name:
        maxLength: 255
        minLength: 3
        type: string
      prerequisite:
        minLength: 20
        type: string
      price:
        minimum: 0
        type: number
      tags:
        items:
          type: string
        type: array
      teacher_id:
        type: integer
      thumbnailImage:
        minLength: 10
        type: string
    required:
    - abilityToAddComment
    - canHaveDiscount
    - categoryId
    - courseLevel
    - description
    - fee
    - forumAccessMode
    - forumStatus
    - image
    - introductionVideo
    - isForumPublic
    - name
    - prerequisite
    - price
    - teacher_id
    - thumbnailImage
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_req.VerifyCourseReqDto:
    properties:
      discountFeeAmountPercentage:
        minimum: 0
        type: number
      fee:
        minimum: 0
        type: number
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.CreateCommentResDto:
    properties:
      content:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.CreateCourseResDto:
    properties:
      abilityToAddComment:
        type: boolean
      canHaveDiscount:
        type: boolean
      category_id:
        type: integer
      commentAccessMode:
        type: string
      courseStatus:
        $ref: '#/definitions/entities.CourseStatus'
      description:
        type: string
      discountFeeAmountPercentage:
        type: number
      fee:
        type: number
      id:
        type: integer
      image:
        type: string
      introductionVideo:
        type: string
      isPublished:
        type: boolean
      isVerifiedByAdmin:
        type: boolean
      level:
        type: string
      maxDiscountAmount:
        type: number
      name:
        type: string
      prerequisite:
        type: string
      price:
        type: number
      tags:
        items:
          type: string
        type: array
      teacherId:
        type: integer
      teacherIncomeAmount:
        type: number
      thumbnailImage:
        type: string
      verifiedByID:
        type: integer
      verifiedDate:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.CreateQuestionResDto:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      priority:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetCourseByItemDto:
    properties:
      abilityToAddComment:
        type: boolean
      canHaveDiscount:
        type: boolean
      category:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.categoryItem'
      commentAccessMode:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      discountFeeAmountPercentage:
        type: number
      fee:
        type: number
      id:
        type: integer
      image:
        type: string
      introductionVideo:
        type: string
      isPublished:
        type: boolean
      isVerifiedByAdmin:
        type: boolean
      level:
        type: string
      maxDiscountAmount:
        type: number
      prerequisite:
        type: string
      price:
        type: number
      status:
        $ref: '#/definitions/entities.CourseStatus'
      statusChangedAt:
        type: string
      tags:
        items:
          type: string
        type: array
      teacher:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.teacherUser'
      thumbnailImage:
        type: string
      updatedAt:
        type: string
      verifiedBy:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.verifiedByItem'
      verifiedDate:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetForumByCourseIDDto:
    properties:
      accessMode:
        $ref: '#/definitions/entities.CourseForumAccessMode'
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDCourse'
      createdAt:
        type: string
      id:
        type: integer
      isPublic:
        type: boolean
      members:
        items:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDMembers'
        type: array
      status:
        $ref: '#/definitions/entities.CourseForumStatus'
      statusChangedAt:
        type: string
      teacher:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDTeacher'
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetLikesPageableItemDto:
    properties:
      type:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.userItem'
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetPageableCourseItemDto:
    properties:
      category:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.courseCategory'
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      introductionVideo:
        type: string
      isPublished:
        type: boolean
      isVerified:
        type: boolean
      name:
        type: string
      price:
        type: number
      status:
        $ref: '#/definitions/entities.CourseStatus'
      statusChangedAt:
        type: string
      teacher:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.courseTeacher'
      thumbnail:
        type: string
      updatedAt:
        type: string
      verifiedBy:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.courseUserVerifier'
      verifiedDate:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetQuestionItemDto:
    properties:
      content:
        type: string
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.questionCourseItem'
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      priority:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.questionUserItem'
      video:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.questionVideoItem'
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.GetVideoByCourseItemDto:
    properties:
      accessLevel:
        $ref: '#/definitions/entities.VideoAccessLevel'
      createdAt:
        type: string
      description:
        type: string
      duration:
        type: string
      id:
        type: integer
      isPublished:
        type: boolean
      isVerified:
        type: boolean
      status:
        $ref: '#/definitions/entities.VideoStatus'
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
      verifiedBy:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.verifiedByUser'
      verifiedDate:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.categoryItem:
    properties:
      id:
        type: integer
      isPublished:
        type: boolean
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.courseCategory:
    properties:
      id:
        type: integer
      isPublished:
        type: boolean
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.courseTeacher:
    properties:
      fullName':
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.courseUserVerifier:
    properties:
      fullName':
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDCourse:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDMembers:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.getForumByCourseIDTeacher:
    properties:
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.questionCourseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.questionUserItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.questionVideoItem:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.teacherUser:
    properties:
      fullName:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.userItem:
    properties:
      full_name:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.verifiedByItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_course_dto_res.verifiedByUser:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_like_dto_req.CreateLikeReqDto:
    properties:
      type:
        enum:
        - none
        - like
        - dislike
        type: string
    required:
    - type
    type: object
  github_com_ladmakhi81_learnup_internals_notification_dto_res.NotificationPageItemDto:
    properties:
      isSeen:
        type: boolean
      metadata: {}
      seenAt:
        type: string
      type:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_notification_dto_res.userItem'
    type: object
  github_com_ladmakhi81_learnup_internals_notification_dto_res.userItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_req.CreateOrderReqDto:
    properties:
      carts:
        items:
          type: integer
        type: array
      gateway:
        enum:
        - zibal
        - zarinpal
        - stripe
        type: string
    required:
    - carts
    - gateway
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.CreateOrderResDto:
    properties:
      payLink:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.GetOrderDetailItemDto:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      discountPrice:
        type: number
      finalPrice:
        type: number
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.orderItem'
        type: array
      status:
        $ref: '#/definitions/entities.OrderStatus'
      statusChangedAt:
        type: string
      totalPrice:
        type: number
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.userOrderDetailItem'
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.PaginatedOrderItemDto:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      discountPrice:
        type: number
      finalPrice:
        type: number
      id:
        type: integer
      status:
        $ref: '#/definitions/entities.OrderStatus'
      statusChangedAt:
        type: string
      totalPrice:
        type: number
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.userOrderItem'
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.orderCourseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.orderItem:
    properties:
      amount:
        type: number
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.orderCourseItem'
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.userOrderDetailItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_order_dto_res.userOrderItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_payment_dto_res.GetPageablePaymentItemDto:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      gateway:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/entities.PaymentStatus'
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_question_dto_req.AnswerQuestionReqDto:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  github_com_ladmakhi81_learnup_internals_question_dto_req.CreateQuestionReqDto:
    properties:
      content:
        minLength: 4
        type: string
      priority:
        enum:
        - high
        - low
        type: string
      videoId:
        type: integer
    required:
    - content
    - priority
    type: object
  github_com_ladmakhi81_learnup_internals_question_dto_res.CreateAnswerResDto:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      questionId:
        type: integer
      senderId:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_question_dto_res.GetAnswerItemDto:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      sender:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_question_dto_res.senderItem'
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_question_dto_res.senderItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_req.AddVideoToCourseReqDto:
    properties:
      accessLevel:
        allOf:
        - $ref: '#/definitions/entities.VideoAccessLevel'
        enum:
        - private
        - public
      courseId:
        minimum: 1
        type: integer
      description:
        minLength: 10
        type: string
      isPublished:
        type: boolean
      title:
        minLength: 3
        type: string
    required:
    - accessLevel
    - courseId
    - description
    - isPublished
    - title
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_req.CreateCourseReqDto:
    properties:
      abilityToAddComment:
        type: boolean
      canHaveDiscount:
        type: boolean
      categoryId:
        type: integer
      commentAccessMode:
        enum:
        - all
        - students
        type: string
      courseLevel:
        enum:
        - beginner
        - pre-intermediate
        - intermediate
        - advance
        type: string
      description:
        minLength: 20
        type: string
      forumAccessMode:
        allOf:
        - $ref: '#/definitions/entities.CourseForumAccessMode'
        enum:
        - student-only
        - teacher-only
        - student-teacher
      forumStatus:
        allOf:
        - $ref: '#/definitions/entities.CourseForumStatus'
        enum:
        - open
        - close
      image:
        minLength: 10
        type: string
      introductionVideo:
        minLength: 20
        type: string
      isForumPublic:
        type: boolean
      maxDiscountAmount:
        minimum: 0
        type: number
      name:
        maxLength: 255
        minLength: 3
        type: string
      prerequisite:
        minLength: 20
        type: string
      price:
        minimum: 0
        type: number
      tags:
        items:
          type: string
        type: array
      thumbnailImage:
        minLength: 10
        type: string
    required:
    - abilityToAddComment
    - canHaveDiscount
    - categoryId
    - courseLevel
    - description
    - forumAccessMode
    - forumStatus
    - image
    - introductionVideo
    - isForumPublic
    - name
    - prerequisite
    - thumbnailImage
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.AddVideoToCourseResDto:
    properties:
      accessLevel:
        $ref: '#/definitions/entities.VideoAccessLevel'
      courseId:
        type: integer
      description:
        type: string
      id:
        type: integer
      isPublished:
        type: boolean
      title:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.CreateCourseResDto:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.FetchCourseItemDto:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.GetCommentPageableItemDto:
    properties:
      content:
        type: string
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.getCommentCourseItem'
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.getCommentUserItem'
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.GetQuestionItemDto:
    properties:
      content:
        type: string
      course:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionCourseItem'
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      priority:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionUserItem'
      video:
        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionVideoItem'
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.getCommentCourseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.getCommentUserItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
      phone:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionCourseItem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionUserItem:
    properties:
      fullName:
        type: string
      id:
        type: integer
    type: object
  github_com_ladmakhi81_learnup_internals_teacher_dto_res.questionVideoItem:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_transaction_dto_res.GetTransactionPageableItemDto:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      currency:
        type: string
      id:
        type: integer
      phone:
        type: string
      tag:
        $ref: '#/definitions/entities.TransactionTag'
      type:
        $ref: '#/definitions/entities.TransactionType'
      user:
        type: string
    type: object
  github_com_ladmakhi81_learnup_internals_user_dto_req.CreateBasicUserReqDto:
    properties:
      firstName:
        minLength: 3
        type: string
      lastName:
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - firstName
    - lastName
    - password
    - phone
    type: object
  github_com_ladmakhi81_learnup_internals_user_dto_res.CreateBasicUserResDto:
    properties:
      createdAt:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  types.ApiError:
    properties:
      message: {}
      statusCode:
        type: integer
      timestamp:
        type: integer
      traceId:
        type: string
    type: object
  types.ApiResponse:
    properties:
      data: {}
      statusCode:
        type: integer
    type: object
  types.PaginationRes:
    properties:
      currentPage:
        type: integer
      row: {}
      totalCount:
        type: integer
      totalPage:
        type: integer
    type: object
info:
  contact: {}
  title: Learnup
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_auth_dto_req.LoginReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_auth_dto_res.LoginResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Login a user and return an access token
      tags:
      - auth
  /carts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_cart_dto_res.GetCartItemDto'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get all cart items for the authenticated user
      tags:
      - carts
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_cart_dto_req.CreateCartReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_cart_dto_res.AddCartResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Add a new cart item
      tags:
      - carts
  /carts/{cart-id}:
    delete:
      parameters:
      - description: Cart ID
        in: path
        name: cart-id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Delete a cart item by ID
      tags:
      - carts
  /categories/:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_category_dto_req.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_category_dto_res.CreateCategoryResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - categories
  /categories/{categoryId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: categoryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Delete a category by ID
      tags:
      - categories
  /categories/page:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ' '
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/types.PaginationRes'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get a paginated list of categories
      tags:
      - categories
  /categories/tree:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_category_dto_res.GetCategoriesTreeItemDto'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get categories as a tree structure
      tags:
      - categories
  /comments/page:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      row:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_comment_dto_res.GetCommentPageItemDto'
                        type: array
                    type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated list of comments
      tags:
      - comments
  /courses:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_req.CreateCourseReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.CreateCourseResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new course
      tags:
      - courses
  /courses/{course-id}:
    get:
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetCourseByItemDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get Course by ID
      tags:
      - courses
  /courses/{course-id}/comment:
    post:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_comment_dto_req.CreateCommentReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.CreateCommentResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new comment
      tags:
      - courses
  /courses/{course-id}/forum:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetForumByCourseIDDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get Forum by Course ID
      tags:
      - courses
  /courses/{course-id}/like:
    post:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - description: ' '
        in: body
        name: like
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_like_dto_req.CreateLikeReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Like a course
      tags:
      - courses
  /courses/{course-id}/likes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetLikesPageableItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated likes by course ID
      tags:
      - courses
  /courses/{course-id}/question:
    post:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - description: ' '
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_question_dto_req.CreateQuestionReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.CreateQuestionResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new question for a course
      tags:
      - courses
  /courses/{course-id}/questions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetQuestionItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Retrieve paginated questions for a specific course
      tags:
      - courses
  /courses/{course-id}/verify:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_req.VerifyCourseReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Verify a course
      tags:
      - courses
  /courses/{course-id}/videos:
    get:
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetVideoByCourseItemDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get Videos by Course ID
      tags:
      - courses
  /courses/comments/{comment-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Comment ID
        in: path
        name: comment-id
        required: true
        type: integer
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Delete a comment
      tags:
      - courses
  /courses/page:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      row:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_course_dto_res.GetPageableCourseItemDto'
                        type: array
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get list of paginated courses
      tags:
      - courses
  /notifications/{notification-id}/seen:
    patch:
      parameters:
      - description: Notification ID
        in: path
        name: notification-id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Mark notification as seen
      tags:
      - notifications
  /notifications/page:
    get:
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number per page
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      row:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_notification_dto_res.NotificationPageItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated notifications
      tags:
      - notifications
  /orders:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.PaginatedOrderItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Retrieve paginated orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_req.CreateOrderReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.CreateOrderResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new order
      tags:
      - orders
  /orders/{order-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: order-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_order_dto_res.GetOrderDetailItemDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Retrieve order details by ID
      tags:
      - orders
  /payments/page:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_payment_dto_res.GetPageablePaymentItemDto'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated payments
      tags:
      - payments
  /questions/{question-id}/answer:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: question-id
        required: true
        type: integer
      - description: ' '
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_question_dto_req.AnswerQuestionReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_question_dto_res.CreateAnswerResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - BearerAuth: []
      summary: Submit an answer to a question
      tags:
      - questions
  /questions/{question-id}/answers:
    get:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: question-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_question_dto_res.GetAnswerItemDto'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Retrieve answers for a specific question
      tags:
      - questions
  /teacher/comments/{course-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: path
        name: course-id
        required: true
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.GetCommentPageableItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated comments by course ID
      tags:
      - teacher
  /teacher/course:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_req.CreateCourseReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.CreateCourseResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create a new course by teacher
      tags:
      - teacher
  /teacher/courses:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      row:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.FetchCourseItemDto'
                        type: array
                    type: object
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get teacher's courses
      tags:
      - teacher
  /teacher/questions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Course ID
        in: query
        name: course-id
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      row:
                        items:
                          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.GetQuestionItemDto'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get questions by course ID for teacher
      tags:
      - teacher
  /teacher/video:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_req.AddVideoToCourseReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_teacher_dto_res.AddVideoToCourseResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Add a new video to a course by teacher
      tags:
      - teacher
  /transactions/page:
    get:
      consumes:
      - application/json
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/types.PaginationRes'
                  - properties:
                      rows:
                        $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_transaction_dto_res.GetTransactionPageableItemDto'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Get paginated transactions
      tags:
      - transactions
  /users/basic:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: CreateBasicUserReqDto
        required: true
        schema:
          $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_user_dto_req.CreateBasicUserReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_ladmakhi81_learnup_internals_user_dto_res.CreateBasicUserResDto'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Create Basic User
      tags:
      - users
  /videos/{video-id}/verify:
    patch:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: path
        name: video-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      security:
      - BearerAuth: []
      summary: Verify a video
      tags:
      - videos
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
