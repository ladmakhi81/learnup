services:
  #
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USERNAME}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - learnup_network
  #
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - learnup_network
  #
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${MAIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${MAIN_DB_PASSWORD}
      POSTGRES_DB: ${MAIN_DB_NAME}
    networks:
      - learnup_network
  #
  tus:
    build:
        context: .
        dockerfile: Dockerfile
        target: tusdbuilder
    command: /app/bin/tusd -port=8089 -s3-bucket=videos -s3-endpoint=http://minio:9000 -hooks-http=http://app:8080/api/tus-hooks/videos s3-disable-ssl=true
    environment:
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      AWS_REGION: ${MINIO_REGION}
    ports:
      - "8089:8089"
    depends_on:
      - minio
    networks:
      - learnup_network
  #
  app:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - minio
      - redis
    environment:
      # minio
      LEARNUP_MINIO__URL: ${MINIO_URL}
      LEARNUP_MINIO__ACCESS_KEY: ${MINIO_ACCESS_KEY}
      LEARNUP_MINIO__SECRET_KEY: ${MINIO_SECRET_KEY}
      LEARNUP_MINIO__USERNAME: ${MINIO_USERNAME}
      LEARNUP_MINIO__PASSWORD: ${MINIO_PASSWORD}
      LEARNUP_MINIO__REGION: ${MINIO_REGION}
      # redis
      LEARNUP_REDIS__HOST: ${REDIS_HOST}
      LEARNUP_REDIS__PORT: ${REDIS_PORT}
      # main db
      LEARNUP_MAIN_DB__HOST: ${MAIN_DB_HOST}
      LEARNUP_MAIN_DB__USERNAME: ${MAIN_DB_USERNAME}
      LEARNUP_MAIN_DB__PASSWORD: ${MAIN_DB_PASSWORD}
      LEARNUP_MAIN_DB__NAME: ${MAIN_DB_NAME}
      LEARNUP_MAIN_DB__PORT: ${MAIN_DB_PORT}
      # smtp
      LEARNUP_SMTP__HOST: ${SMTP_HOST}
      LEARNUP_SMTP__PORT: ${SMTP_PORT}
      LEARNUP_SMTP__USERNAME: ${SMTP_USERNAME}
      LEARNUP_SMTP__PASSWORD: ${SMTP_PASSWORD}
      # app
      LEARNUP_APP__PORT: ${APP_PORT}
      LEARNUP_APP__TOKEN_SECRET_KEY: ${APP_TOKEN_SECRET_KEY}
      LEARNUP_APP__OPENAI_KEY: ${APP_OPENAI_KEY}
      # temporal
      LEARNUP_TEMPORAL__PORT: ${TEMPORAL_PORT}
      LEARNUP_TEMPORAL__HOST: ${TEMPORAL_HOST}
      LEARNUP_TEMPORAL__ENDPOINT: ${TEMPORAL_ENDPOINT}
      # zarinpal
      LEARNUP_ZARINPAL__MERCHANT: ${ZARINPAL_MERCHANT}
      LEARNUP_ZARINPAL__CALLBACK_URL: ${ZARINPAL_CALLBACK_URL}
      # zibal
      LEARNUP_ZIBAL__MERCHANT: ${ZIBAL_MERCHANT}
      LEARNUP_ZIBAL__CALLBACK_URL: ${ZIBAL_CALLBACK_URL}
      # stripe
      LEARNUP_STRIPE__KEY: ${STRIPE_KEY}
      LEARNUP_STRIPE__CALLBACK_URL: ${STRIPE_CALLBACK_URL}
    networks:
      - learnup_network
    volumes:
      - ./log:/app/log
  #
  temporal:
    image: temporalio/auto-setup:1.20.0
    environment:
      DB: postgresql
      DB_PORT: ${MAIN_DB_PORT}
      POSTGRES_USER: ${MAIN_DB_USERNAME}
      POSTGRES_PWD: ${MAIN_DB_PASSWORD}
      POSTGRES_SEEDS: db
      TEMPORAL_CLI_ADDRESS: ${TEMPORAL_ENDPOINT}
    ports:
      - "7233:7233"
    depends_on:
      - db
    networks:
      - learnup_network
  #
  temporal-admin-tools:
    image: temporalio/admin-tools:1.20.0
    stdin_open: true
    tty: true
    depends_on:
      - temporal
    environment:
      TEMPORAL_CLI_ADDRESS: ${TEMPORAL_ENDPOINT}
    networks:
      - learnup_network
  #
  temporal-ui:
    image: temporalio/ui:latest
    ports:
      - "9090:9090"
    environment:
      TEMPORAL_ADDRESS: ${TEMPORAL_ENDPOINT}
      TEMPORAL_UI_PORT: 9090
    depends_on:
      - temporal
    networks:
      - learnup_network

networks:
  learnup_network:
    driver: bridge
